"use strict";const n=require("electron");n.contextBridge.exposeInMainWorld("ipcRenderer",l(n.ipcRenderer));n.contextBridge.exposeInMainWorld("electron",{saveModelFile:async(e,r)=>new Promise((o,s)=>{const t=new FileReader;t.onload=async i=>{try{if(!i.target||!i.target.result){s(new Error("Failed to read file"));return}const c=i.target.result,a=await n.ipcRenderer.invoke("save-model-file",c,r);o(a)}catch(c){s(c)}},t.onerror=i=>s(i),t.readAsArrayBuffer(e)}),saveImageFile:async(e,r)=>new Promise((o,s)=>{const t=new FileReader;t.onload=async i=>{try{if(!i.target||!i.target.result){s(new Error("Failed to read file"));return}const c=i.target.result,a=await n.ipcRenderer.invoke("save-image-file",c,r);o(a)}catch(c){s(c)}},t.onerror=i=>s(i),t.readAsArrayBuffer(e)}),testFileAccess:async e=>{try{let r=e;return r.startsWith("file://")?r=r.substring(7):r.startsWith("app-file://")&&(r=r.substring(11)),{success:!0,exists:await n.ipcRenderer.invoke("test-file-access",r)}}catch(r){return{success:!1,error:r.message}}},loadFileAsBlob:async e=>{try{let r=e;r.startsWith("file://")?r=r.substring(7):r.startsWith("app-file://")&&(r=r.substring(11));const o=await n.ipcRenderer.invoke("read-file-as-buffer",r),s=new Blob([o]);return{success:!0,blobUrl:URL.createObjectURL(s)}}catch(r){return{success:!1,error:r.message}}},loadImageFromAppFile:async e=>{try{if(e.startsWith("blob:"))return{success:!0,url:e};if(e.startsWith("app-file://")){const r=e.substring(11),o=await n.ipcRenderer.invoke("read-file-as-buffer",decodeURI(r)),s=r.split(".").pop().toLowerCase();let t="application/octet-stream";s==="jpg"||s==="jpeg"?t="image/jpeg":s==="png"?t="image/png":s==="gif"?t="image/gif":s==="webp"?t="image/webp":s==="svg"&&(t="image/svg+xml");const i=new Blob([o],{type:t}),c=URL.createObjectURL(i);return window._imageBlobCache=window._imageBlobCache||{},window._imageBlobCache[e]=c,{success:!0,url:c}}return{success:!0,url:e}}catch(r){return console.error("Error loading image from app-file:",r),{success:!1,error:r.message,url:e}}},loadVideoFromAppFile:async e=>{try{if(e.startsWith("blob:"))return{success:!0,url:e};if(e.startsWith("app-file://")||e.startsWith("file://")){const r=e.startsWith("app-file://")?"app-file://":"file://",o=e.substring(r.length),s=await n.ipcRenderer.invoke("read-file-as-buffer",decodeURI(o)),t=o.split(".").pop().toLowerCase();let i="application/octet-stream";t==="mp4"?i="video/mp4":t==="webm"?i="video/webm":t==="mov"?i="video/quicktime":t==="avi"?i="video/x-msvideo":t==="mkv"&&(i="video/x-matroska");const c=new Blob([s],{type:i}),a=URL.createObjectURL(c);return window._videoBlobCache=window._videoBlobCache||{},window._videoBlobCache[e]=a,{success:!0,url:a}}return{success:!0,url:e}}catch(r){return console.error("Error loading video from app-file:",r),{success:!1,error:r.message,url:e}}},saveVideoFile:async(e,r)=>{try{const s=await new Blob([e]).arrayBuffer();return await n.ipcRenderer.invoke("save-video-file",new Uint8Array(s),r)}catch(o){throw console.error("Error saving video file:",o),o}},listVideosFromDisk:async()=>{try{return await n.ipcRenderer.invoke("list-videos-from-disk")}catch(e){return console.error("Error listing videos from disk:",e),{success:!1,videos:[],error:e.message}}},getScreenSources:async()=>{try{return await n.ipcRenderer.invoke("get-screen-sources")}catch(e){throw console.error("Error getting screen sources:",e),e}},setAlwaysOnTop:e=>n.ipcRenderer.sendSync("set-always-on-top",e),getAlwaysOnTop:async()=>await n.ipcRenderer.invoke("get-always-on-top"),reloadApp:()=>{n.ipcRenderer.invoke("reload-app")},onGlobalShortcut:e=>{const r=(o,s)=>{e(s)};return n.ipcRenderer.on("global-shortcut",r),()=>{n.ipcRenderer.removeListener("global-shortcut",r)}}});function l(e){const r=Object.getPrototypeOf(e);for(const[o,s]of Object.entries(r))Object.prototype.hasOwnProperty.call(e,o)||(typeof s=="function"?e[o]=function(...t){return s.call(e,...t)}:e[o]=s);return e}
